# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
package org.apache.sling.launchpad.testing

import org.apache.maven.execution.MavenSession;
import org.apache.maven.project.MavenProject;
import org.apache.sling.maven.projectsupport.bundlelist.v1_0_0.*;

global MavenSession mavenSession

function boolean inCurrentBuild(MavenSession session, String artifactId) {
    for (MavenProject project : session.getSortedProjects()) {
        if (project.getArtifactId().equals(artifactId)) {
            return true;
        }
    }
    return false;
#    return session.getExecutionProperties().containsKey("sling.bundle.version."+artifactId);
}

function String getBuildVersion(MavenSession session, String artifactId) {
    for (MavenProject project : session.getSortedProjects()) {
        if (project.getArtifactId().equals(artifactId)) {
            return project.getVersion();
        }
    }
    return null;
}

rule "use LATEST for all Sling bundles"

    when
        $bundleList : BundleList()
        $startLevel : StartLevel() from $bundleList.startLevels
        $bundle : Bundle(groupId == "org.apache.sling")
            from $startLevel.bundles
        eval(inCurrentBuild(mavenSession, $bundle.getArtifactId()))
    then
        System.out.println("Using reactor version for " + $bundle.getArtifactId());
        $bundle.setVersion(getBuildVersion(mavenSession, $bundle.getArtifactId()));

end

